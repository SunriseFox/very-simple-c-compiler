Terminals unused in grammar

   K_BREAK
   K_CASE
   K_CONTINUE
   K_DEFAULT
   K_GOTO
   K_RET
   K_SWITCH
   SIZEOF
   QM
   COLON
   LABEL


Grammar

    0 $accept: start $end

    1 start: program

    2 program: program statement
    3        | statement
    4        | LB RB

    5 lb_scope: LB

    6 statement: expression SEMICOLON
    7          | declaration SEMICOLON
    8          | SEMICOLON
    9          | lb_scope program RB
   10          | if_else_condition
   11          | if_condition
   12          | for_statement
   13          | while_statement
   14          | do_while_statement
   15          | function_declaration_statement

   16 function_declaration_statement: type IDENTIFIER LP RP LB program RB
   17                               | type IDENTIFIER LP RP LB RB

   18 if_condition: K_IF LP expression RP statement

   19 if_else_condition: K_IF LP expression RP statement K_ELSE statement

   20 for_statement: K_FOR LP expression SEMICOLON expression SEMICOLON expression RP statement

   21 while_statement: K_WHILE LP expression RP statement

   22 do_while_statement: K_DO lb_scope statement RB K_WHILE LP expression RP SEMICOLON

   23 declaration: type id_list

   24 type: T_INT
   25     | T_CHAR
   26     | T_STRING
   27     | T_DOUBLE
   28     | T_VOID
   29     | T_AUTO

   30 id_list: id_pair
   31        | id_list COMMA id_pair

   32 id_pair: id_prefix ASSIGN expression
   33        | id_prefix

   34 id_prefix: IDENTIFIER

   35 expression: assignment
   36           | expression COMMA assignment

   37 assignment: logical
   38           | node MULAS logical
   39           | node DIVAS logical
   40           | node MODAS logical
   41           | node ADDAS logical
   42           | node SUBAS logical
   43           | node BANDAS logical
   44           | node BXORAS logical
   45           | node BORAS logical
   46           | node ASSIGN logical

   47 logical: comparative
   48        | logical LAND comparative
   49        | logical LOR comparative

   50 comparative: additive
   51            | comparative LESS additive
   52            | comparative LESSEQ additive
   53            | comparative MORE additive
   54            | comparative MOREEQ additive
   55            | comparative EQ additive
   56            | comparative NE additive

   57 additive: multiplicative
   58         | additive ADD multiplicative
   59         | additive SUB multiplicative
   60         | additive BAND multiplicative
   61         | additive BXOR multiplicative
   62         | additive BOR multiplicative
   63         | ADD multiplicative
   64         | SUB multiplicative

   65 multiplicative: bitshift
   66               | multiplicative MUL bitshift
   67               | multiplicative DIV bitshift
   68               | multiplicative MOD bitshift

   69 bitshift: bitbinary
   70         | bitshift LMOVE bitbinary
   71         | bitshift RMOVE bitbinary

   72 bitbinary: postfix
   73          | NOT bitbinary
   74          | BREV bitbinary

   75 postfix: cast
   76        | INC postfix
   77        | DEC postfix

   78 cast: LP expression RP
   79     | node

   80 node: IDENTIFIER
   81     | SYMBOL


Terminals, with rules where they appear

$end (0) 0
error (256)
T_AUTO (258) 29
T_CHAR (259) 25
T_INT (260) 24
T_DOUBLE (261) 27
T_VOID (262) 28
T_STRING (263) 26
K_BREAK (264)
K_CASE (265)
K_CONTINUE (266)
K_DEFAULT (267)
K_DO (268) 22
K_ELSE (269) 19
K_FOR (270) 20
K_GOTO (271)
K_IF (272) 18 19
K_RET (273)
K_SWITCH (274)
K_WHILE (275) 21 22
LP (276) 16 17 18 19 20 21 22 78
RP (277) 16 17 18 19 20 21 22 78
INC (278) 76
DEC (279) 77
SIZEOF (280)
NOT (281) 73
BREV (282) 74
LMOVE (283) 70
RMOVE (284) 71
MUL (285) 66
DIV (286) 67
MOD (287) 68
ADD (288) 58 63
SUB (289) 59 64
BAND (290) 60
BXOR (291) 61
BOR (292) 62
LESS (293) 51
LESSEQ (294) 52
MORE (295) 53
MOREEQ (296) 54
EQ (297) 55
NE (298) 56
LAND (299) 48
LOR (300) 49
QM (301)
COLON (302)
MULAS (303) 38
DIVAS (304) 39
MODAS (305) 40
ADDAS (306) 41
SUBAS (307) 42
BANDAS (308) 43
BXORAS (309) 44
BORAS (310) 45
ASSIGN (311) 32 46
COMMA (312) 31 36
SEMICOLON (313) 6 7 8 20 22
LABEL (314)
SYMBOL (315) 81
IDENTIFIER (316) 16 17 34 80
LB (317) 4 5 16 17
RB (318) 4 9 16 17 22
IFX (319)
UMINUS (320)
UADD (321)


Nonterminals, with rules where they appear

$accept (67)
    on left: 0
start (68)
    on left: 1, on right: 0
program (69)
    on left: 2 3 4, on right: 1 2 9 16
lb_scope (70)
    on left: 5, on right: 9 22
statement (71)
    on left: 6 7 8 9 10 11 12 13 14 15, on right: 2 3 18 19 20 21 22
function_declaration_statement (72)
    on left: 16 17, on right: 15
if_condition (73)
    on left: 18, on right: 11
if_else_condition (74)
    on left: 19, on right: 10
for_statement (75)
    on left: 20, on right: 12
while_statement (76)
    on left: 21, on right: 13
do_while_statement (77)
    on left: 22, on right: 14
declaration (78)
    on left: 23, on right: 7
type (79)
    on left: 24 25 26 27 28 29, on right: 16 17 23
id_list (80)
    on left: 30 31, on right: 23 31
id_pair (81)
    on left: 32 33, on right: 30 31
id_prefix (82)
    on left: 34, on right: 32 33
expression (83)
    on left: 35 36, on right: 6 18 19 20 21 22 32 36 78
assignment (84)
    on left: 37 38 39 40 41 42 43 44 45 46, on right: 35 36
logical (85)
    on left: 47 48 49, on right: 37 38 39 40 41 42 43 44 45 46 48 49
comparative (86)
    on left: 50 51 52 53 54 55 56, on right: 47 48 49 51 52 53 54 55
    56
additive (87)
    on left: 57 58 59 60 61 62 63 64, on right: 50 51 52 53 54 55 56
    58 59 60 61 62
multiplicative (88)
    on left: 65 66 67 68, on right: 57 58 59 60 61 62 63 64 66 67 68
bitshift (89)
    on left: 69 70 71, on right: 65 66 67 68 70 71
bitbinary (90)
    on left: 72 73 74, on right: 69 70 71 73 74
postfix (91)
    on left: 75 76 77, on right: 72 76 77
cast (92)
    on left: 78 79, on right: 75
node (93)
    on left: 80 81, on right: 38 39 40 41 42 43 44 45 46 79


State 0

    0 $accept: . start $end

    T_AUTO      shift, and go to state 1
    T_CHAR      shift, and go to state 2
    T_INT       shift, and go to state 3
    T_DOUBLE    shift, and go to state 4
    T_VOID      shift, and go to state 5
    T_STRING    shift, and go to state 6
    K_DO        shift, and go to state 7
    K_FOR       shift, and go to state 8
    K_IF        shift, and go to state 9
    K_WHILE     shift, and go to state 10
    LP          shift, and go to state 11
    INC         shift, and go to state 12
    DEC         shift, and go to state 13
    NOT         shift, and go to state 14
    BREV        shift, and go to state 15
    ADD         shift, and go to state 16
    SUB         shift, and go to state 17
    SEMICOLON   shift, and go to state 18
    SYMBOL      shift, and go to state 19
    IDENTIFIER  shift, and go to state 20
    LB          shift, and go to state 21

    start                           go to state 22
    program                         go to state 23
    lb_scope                        go to state 24
    statement                       go to state 25
    function_declaration_statement  go to state 26
    if_condition                    go to state 27
    if_else_condition               go to state 28
    for_statement                   go to state 29
    while_statement                 go to state 30
    do_while_statement              go to state 31
    declaration                     go to state 32
    type                            go to state 33
    expression                      go to state 34
    assignment                      go to state 35
    logical                         go to state 36
    comparative                     go to state 37
    additive                        go to state 38
    multiplicative                  go to state 39
    bitshift                        go to state 40
    bitbinary                       go to state 41
    postfix                         go to state 42
    cast                            go to state 43
    node                            go to state 44


State 1

   29 type: T_AUTO .

    $default  reduce using rule 29 (type)


State 2

   25 type: T_CHAR .

    $default  reduce using rule 25 (type)


State 3

   24 type: T_INT .

    $default  reduce using rule 24 (type)


State 4

   27 type: T_DOUBLE .

    $default  reduce using rule 27 (type)


State 5

   28 type: T_VOID .

    $default  reduce using rule 28 (type)


State 6

   26 type: T_STRING .

    $default  reduce using rule 26 (type)


State 7

   22 do_while_statement: K_DO . lb_scope statement RB K_WHILE LP expression RP SEMICOLON

    LB  shift, and go to state 45

    lb_scope  go to state 46


State 8

   20 for_statement: K_FOR . LP expression SEMICOLON expression SEMICOLON expression RP statement

    LP  shift, and go to state 47


State 9

   18 if_condition: K_IF . LP expression RP statement
   19 if_else_condition: K_IF . LP expression RP statement K_ELSE statement

    LP  shift, and go to state 48


State 10

   21 while_statement: K_WHILE . LP expression RP statement

    LP  shift, and go to state 49


State 11

   78 cast: LP . expression RP

    LP          shift, and go to state 11
    INC         shift, and go to state 12
    DEC         shift, and go to state 13
    NOT         shift, and go to state 14
    BREV        shift, and go to state 15
    ADD         shift, and go to state 16
    SUB         shift, and go to state 17
    SYMBOL      shift, and go to state 19
    IDENTIFIER  shift, and go to state 20

    expression      go to state 50
    assignment      go to state 35
    logical         go to state 36
    comparative     go to state 37
    additive        go to state 38
    multiplicative  go to state 39
    bitshift        go to state 40
    bitbinary       go to state 41
    postfix         go to state 42
    cast            go to state 43
    node            go to state 44


State 12

   76 postfix: INC . postfix

    LP          shift, and go to state 11
    INC         shift, and go to state 12
    DEC         shift, and go to state 13
    SYMBOL      shift, and go to state 19
    IDENTIFIER  shift, and go to state 20

    postfix  go to state 51
    cast     go to state 43
    node     go to state 52


State 13

   77 postfix: DEC . postfix

    LP          shift, and go to state 11
    INC         shift, and go to state 12
    DEC         shift, and go to state 13
    SYMBOL      shift, and go to state 19
    IDENTIFIER  shift, and go to state 20

    postfix  go to state 53
    cast     go to state 43
    node     go to state 52


State 14

   73 bitbinary: NOT . bitbinary

    LP          shift, and go to state 11
    INC         shift, and go to state 12
    DEC         shift, and go to state 13
    NOT         shift, and go to state 14
    BREV        shift, and go to state 15
    SYMBOL      shift, and go to state 19
    IDENTIFIER  shift, and go to state 20

    bitbinary  go to state 54
    postfix    go to state 42
    cast       go to state 43
    node       go to state 52


State 15

   74 bitbinary: BREV . bitbinary

    LP          shift, and go to state 11
    INC         shift, and go to state 12
    DEC         shift, and go to state 13
    NOT         shift, and go to state 14
    BREV        shift, and go to state 15
    SYMBOL      shift, and go to state 19
    IDENTIFIER  shift, and go to state 20

    bitbinary  go to state 55
    postfix    go to state 42
    cast       go to state 43
    node       go to state 52


State 16

   63 additive: ADD . multiplicative

    LP          shift, and go to state 11
    INC         shift, and go to state 12
    DEC         shift, and go to state 13
    NOT         shift, and go to state 14
    BREV        shift, and go to state 15
    SYMBOL      shift, and go to state 19
    IDENTIFIER  shift, and go to state 20

    multiplicative  go to state 56
    bitshift        go to state 40
    bitbinary       go to state 41
    postfix         go to state 42
    cast            go to state 43
    node            go to state 52


State 17

   64 additive: SUB . multiplicative

    LP          shift, and go to state 11
    INC         shift, and go to state 12
    DEC         shift, and go to state 13
    NOT         shift, and go to state 14
    BREV        shift, and go to state 15
    SYMBOL      shift, and go to state 19
    IDENTIFIER  shift, and go to state 20

    multiplicative  go to state 57
    bitshift        go to state 40
    bitbinary       go to state 41
    postfix         go to state 42
    cast            go to state 43
    node            go to state 52


State 18

    8 statement: SEMICOLON .

    $default  reduce using rule 8 (statement)


State 19

   81 node: SYMBOL .

    $default  reduce using rule 81 (node)


State 20

   80 node: IDENTIFIER .

    $default  reduce using rule 80 (node)


State 21

    4 program: LB . RB
    5 lb_scope: LB .

    RB  shift, and go to state 58

    $default  reduce using rule 5 (lb_scope)


State 22

    0 $accept: start . $end

    $end  shift, and go to state 59


State 23

    1 start: program .
    2 program: program . statement

    T_AUTO      shift, and go to state 1
    T_CHAR      shift, and go to state 2
    T_INT       shift, and go to state 3
    T_DOUBLE    shift, and go to state 4
    T_VOID      shift, and go to state 5
    T_STRING    shift, and go to state 6
    K_DO        shift, and go to state 7
    K_FOR       shift, and go to state 8
    K_IF        shift, and go to state 9
    K_WHILE     shift, and go to state 10
    LP          shift, and go to state 11
    INC         shift, and go to state 12
    DEC         shift, and go to state 13
    NOT         shift, and go to state 14
    BREV        shift, and go to state 15
    ADD         shift, and go to state 16
    SUB         shift, and go to state 17
    SEMICOLON   shift, and go to state 18
    SYMBOL      shift, and go to state 19
    IDENTIFIER  shift, and go to state 20
    LB          shift, and go to state 45

    $default  reduce using rule 1 (start)

    lb_scope                        go to state 24
    statement                       go to state 60
    function_declaration_statement  go to state 26
    if_condition                    go to state 27
    if_else_condition               go to state 28
    for_statement                   go to state 29
    while_statement                 go to state 30
    do_while_statement              go to state 31
    declaration                     go to state 32
    type                            go to state 33
    expression                      go to state 34
    assignment                      go to state 35
    logical                         go to state 36
    comparative                     go to state 37
    additive                        go to state 38
    multiplicative                  go to state 39
    bitshift                        go to state 40
    bitbinary                       go to state 41
    postfix                         go to state 42
    cast                            go to state 43
    node                            go to state 44


State 24

    9 statement: lb_scope . program RB

    T_AUTO      shift, and go to state 1
    T_CHAR      shift, and go to state 2
    T_INT       shift, and go to state 3
    T_DOUBLE    shift, and go to state 4
    T_VOID      shift, and go to state 5
    T_STRING    shift, and go to state 6
    K_DO        shift, and go to state 7
    K_FOR       shift, and go to state 8
    K_IF        shift, and go to state 9
    K_WHILE     shift, and go to state 10
    LP          shift, and go to state 11
    INC         shift, and go to state 12
    DEC         shift, and go to state 13
    NOT         shift, and go to state 14
    BREV        shift, and go to state 15
    ADD         shift, and go to state 16
    SUB         shift, and go to state 17
    SEMICOLON   shift, and go to state 18
    SYMBOL      shift, and go to state 19
    IDENTIFIER  shift, and go to state 20
    LB          shift, and go to state 21

    program                         go to state 61
    lb_scope                        go to state 24
    statement                       go to state 25
    function_declaration_statement  go to state 26
    if_condition                    go to state 27
    if_else_condition               go to state 28
    for_statement                   go to state 29
    while_statement                 go to state 30
    do_while_statement              go to state 31
    declaration                     go to state 32
    type                            go to state 33
    expression                      go to state 34
    assignment                      go to state 35
    logical                         go to state 36
    comparative                     go to state 37
    additive                        go to state 38
    multiplicative                  go to state 39
    bitshift                        go to state 40
    bitbinary                       go to state 41
    postfix                         go to state 42
    cast                            go to state 43
    node                            go to state 44


State 25

    3 program: statement .

    $default  reduce using rule 3 (program)


State 26

   15 statement: function_declaration_statement .

    $default  reduce using rule 15 (statement)


State 27

   11 statement: if_condition .

    $default  reduce using rule 11 (statement)


State 28

   10 statement: if_else_condition .

    $default  reduce using rule 10 (statement)


State 29

   12 statement: for_statement .

    $default  reduce using rule 12 (statement)


State 30

   13 statement: while_statement .

    $default  reduce using rule 13 (statement)


State 31

   14 statement: do_while_statement .

    $default  reduce using rule 14 (statement)


State 32

    7 statement: declaration . SEMICOLON

    SEMICOLON  shift, and go to state 62


State 33

   16 function_declaration_statement: type . IDENTIFIER LP RP LB program RB
   17                               | type . IDENTIFIER LP RP LB RB
   23 declaration: type . id_list

    IDENTIFIER  shift, and go to state 63

    id_list    go to state 64
    id_pair    go to state 65
    id_prefix  go to state 66


State 34

    6 statement: expression . SEMICOLON
   36 expression: expression . COMMA assignment

    COMMA      shift, and go to state 67
    SEMICOLON  shift, and go to state 68


State 35

   35 expression: assignment .

    $default  reduce using rule 35 (expression)


State 36

   37 assignment: logical .
   48 logical: logical . LAND comparative
   49        | logical . LOR comparative

    LAND  shift, and go to state 69
    LOR   shift, and go to state 70

    $default  reduce using rule 37 (assignment)


State 37

   47 logical: comparative .
   51 comparative: comparative . LESS additive
   52            | comparative . LESSEQ additive
   53            | comparative . MORE additive
   54            | comparative . MOREEQ additive
   55            | comparative . EQ additive
   56            | comparative . NE additive

    LESS    shift, and go to state 71
    LESSEQ  shift, and go to state 72
    MORE    shift, and go to state 73
    MOREEQ  shift, and go to state 74
    EQ      shift, and go to state 75
    NE      shift, and go to state 76

    $default  reduce using rule 47 (logical)


State 38

   50 comparative: additive .
   58 additive: additive . ADD multiplicative
   59         | additive . SUB multiplicative
   60         | additive . BAND multiplicative
   61         | additive . BXOR multiplicative
   62         | additive . BOR multiplicative

    ADD   shift, and go to state 77
    SUB   shift, and go to state 78
    BAND  shift, and go to state 79
    BXOR  shift, and go to state 80
    BOR   shift, and go to state 81

    $default  reduce using rule 50 (comparative)


State 39

   57 additive: multiplicative .
   66 multiplicative: multiplicative . MUL bitshift
   67               | multiplicative . DIV bitshift
   68               | multiplicative . MOD bitshift

    MUL  shift, and go to state 82
    DIV  shift, and go to state 83
    MOD  shift, and go to state 84

    $default  reduce using rule 57 (additive)


State 40

   65 multiplicative: bitshift .
   70 bitshift: bitshift . LMOVE bitbinary
   71         | bitshift . RMOVE bitbinary

    LMOVE  shift, and go to state 85
    RMOVE  shift, and go to state 86

    $default  reduce using rule 65 (multiplicative)


State 41

   69 bitshift: bitbinary .

    $default  reduce using rule 69 (bitshift)


State 42

   72 bitbinary: postfix .

    $default  reduce using rule 72 (bitbinary)


State 43

   75 postfix: cast .

    $default  reduce using rule 75 (postfix)


State 44

   38 assignment: node . MULAS logical
   39           | node . DIVAS logical
   40           | node . MODAS logical
   41           | node . ADDAS logical
   42           | node . SUBAS logical
   43           | node . BANDAS logical
   44           | node . BXORAS logical
   45           | node . BORAS logical
   46           | node . ASSIGN logical
   79 cast: node .

    MULAS   shift, and go to state 87
    DIVAS   shift, and go to state 88
    MODAS   shift, and go to state 89
    ADDAS   shift, and go to state 90
    SUBAS   shift, and go to state 91
    BANDAS  shift, and go to state 92
    BXORAS  shift, and go to state 93
    BORAS   shift, and go to state 94
    ASSIGN  shift, and go to state 95

    $default  reduce using rule 79 (cast)


State 45

    5 lb_scope: LB .

    $default  reduce using rule 5 (lb_scope)


State 46

   22 do_while_statement: K_DO lb_scope . statement RB K_WHILE LP expression RP SEMICOLON

    T_AUTO      shift, and go to state 1
    T_CHAR      shift, and go to state 2
    T_INT       shift, and go to state 3
    T_DOUBLE    shift, and go to state 4
    T_VOID      shift, and go to state 5
    T_STRING    shift, and go to state 6
    K_DO        shift, and go to state 7
    K_FOR       shift, and go to state 8
    K_IF        shift, and go to state 9
    K_WHILE     shift, and go to state 10
    LP          shift, and go to state 11
    INC         shift, and go to state 12
    DEC         shift, and go to state 13
    NOT         shift, and go to state 14
    BREV        shift, and go to state 15
    ADD         shift, and go to state 16
    SUB         shift, and go to state 17
    SEMICOLON   shift, and go to state 18
    SYMBOL      shift, and go to state 19
    IDENTIFIER  shift, and go to state 20
    LB          shift, and go to state 45

    lb_scope                        go to state 24
    statement                       go to state 96
    function_declaration_statement  go to state 26
    if_condition                    go to state 27
    if_else_condition               go to state 28
    for_statement                   go to state 29
    while_statement                 go to state 30
    do_while_statement              go to state 31
    declaration                     go to state 32
    type                            go to state 33
    expression                      go to state 34
    assignment                      go to state 35
    logical                         go to state 36
    comparative                     go to state 37
    additive                        go to state 38
    multiplicative                  go to state 39
    bitshift                        go to state 40
    bitbinary                       go to state 41
    postfix                         go to state 42
    cast                            go to state 43
    node                            go to state 44


State 47

   20 for_statement: K_FOR LP . expression SEMICOLON expression SEMICOLON expression RP statement

    LP          shift, and go to state 11
    INC         shift, and go to state 12
    DEC         shift, and go to state 13
    NOT         shift, and go to state 14
    BREV        shift, and go to state 15
    ADD         shift, and go to state 16
    SUB         shift, and go to state 17
    SYMBOL      shift, and go to state 19
    IDENTIFIER  shift, and go to state 20

    expression      go to state 97
    assignment      go to state 35
    logical         go to state 36
    comparative     go to state 37
    additive        go to state 38
    multiplicative  go to state 39
    bitshift        go to state 40
    bitbinary       go to state 41
    postfix         go to state 42
    cast            go to state 43
    node            go to state 44


State 48

   18 if_condition: K_IF LP . expression RP statement
   19 if_else_condition: K_IF LP . expression RP statement K_ELSE statement

    LP          shift, and go to state 11
    INC         shift, and go to state 12
    DEC         shift, and go to state 13
    NOT         shift, and go to state 14
    BREV        shift, and go to state 15
    ADD         shift, and go to state 16
    SUB         shift, and go to state 17
    SYMBOL      shift, and go to state 19
    IDENTIFIER  shift, and go to state 20

    expression      go to state 98
    assignment      go to state 35
    logical         go to state 36
    comparative     go to state 37
    additive        go to state 38
    multiplicative  go to state 39
    bitshift        go to state 40
    bitbinary       go to state 41
    postfix         go to state 42
    cast            go to state 43
    node            go to state 44


State 49

   21 while_statement: K_WHILE LP . expression RP statement

    LP          shift, and go to state 11
    INC         shift, and go to state 12
    DEC         shift, and go to state 13
    NOT         shift, and go to state 14
    BREV        shift, and go to state 15
    ADD         shift, and go to state 16
    SUB         shift, and go to state 17
    SYMBOL      shift, and go to state 19
    IDENTIFIER  shift, and go to state 20

    expression      go to state 99
    assignment      go to state 35
    logical         go to state 36
    comparative     go to state 37
    additive        go to state 38
    multiplicative  go to state 39
    bitshift        go to state 40
    bitbinary       go to state 41
    postfix         go to state 42
    cast            go to state 43
    node            go to state 44


State 50

   36 expression: expression . COMMA assignment
   78 cast: LP expression . RP

    RP     shift, and go to state 100
    COMMA  shift, and go to state 67


State 51

   76 postfix: INC postfix .

    $default  reduce using rule 76 (postfix)


State 52

   79 cast: node .

    $default  reduce using rule 79 (cast)


State 53

   77 postfix: DEC postfix .

    $default  reduce using rule 77 (postfix)


State 54

   73 bitbinary: NOT bitbinary .

    $default  reduce using rule 73 (bitbinary)


State 55

   74 bitbinary: BREV bitbinary .

    $default  reduce using rule 74 (bitbinary)


State 56

   63 additive: ADD multiplicative .
   66 multiplicative: multiplicative . MUL bitshift
   67               | multiplicative . DIV bitshift
   68               | multiplicative . MOD bitshift

    MUL  shift, and go to state 82
    DIV  shift, and go to state 83
    MOD  shift, and go to state 84

    $default  reduce using rule 63 (additive)


State 57

   64 additive: SUB multiplicative .
   66 multiplicative: multiplicative . MUL bitshift
   67               | multiplicative . DIV bitshift
   68               | multiplicative . MOD bitshift

    MUL  shift, and go to state 82
    DIV  shift, and go to state 83
    MOD  shift, and go to state 84

    $default  reduce using rule 64 (additive)


State 58

    4 program: LB RB .

    $default  reduce using rule 4 (program)


State 59

    0 $accept: start $end .

    $default  accept


State 60

    2 program: program statement .

    $default  reduce using rule 2 (program)


State 61

    2 program: program . statement
    9 statement: lb_scope program . RB

    T_AUTO      shift, and go to state 1
    T_CHAR      shift, and go to state 2
    T_INT       shift, and go to state 3
    T_DOUBLE    shift, and go to state 4
    T_VOID      shift, and go to state 5
    T_STRING    shift, and go to state 6
    K_DO        shift, and go to state 7
    K_FOR       shift, and go to state 8
    K_IF        shift, and go to state 9
    K_WHILE     shift, and go to state 10
    LP          shift, and go to state 11
    INC         shift, and go to state 12
    DEC         shift, and go to state 13
    NOT         shift, and go to state 14
    BREV        shift, and go to state 15
    ADD         shift, and go to state 16
    SUB         shift, and go to state 17
    SEMICOLON   shift, and go to state 18
    SYMBOL      shift, and go to state 19
    IDENTIFIER  shift, and go to state 20
    LB          shift, and go to state 45
    RB          shift, and go to state 101

    lb_scope                        go to state 24
    statement                       go to state 60
    function_declaration_statement  go to state 26
    if_condition                    go to state 27
    if_else_condition               go to state 28
    for_statement                   go to state 29
    while_statement                 go to state 30
    do_while_statement              go to state 31
    declaration                     go to state 32
    type                            go to state 33
    expression                      go to state 34
    assignment                      go to state 35
    logical                         go to state 36
    comparative                     go to state 37
    additive                        go to state 38
    multiplicative                  go to state 39
    bitshift                        go to state 40
    bitbinary                       go to state 41
    postfix                         go to state 42
    cast                            go to state 43
    node                            go to state 44


State 62

    7 statement: declaration SEMICOLON .

    $default  reduce using rule 7 (statement)


State 63

   16 function_declaration_statement: type IDENTIFIER . LP RP LB program RB
   17                               | type IDENTIFIER . LP RP LB RB
   34 id_prefix: IDENTIFIER .

    LP  shift, and go to state 102

    $default  reduce using rule 34 (id_prefix)


State 64

   23 declaration: type id_list .
   31 id_list: id_list . COMMA id_pair

    COMMA  shift, and go to state 103

    $default  reduce using rule 23 (declaration)


State 65

   30 id_list: id_pair .

    $default  reduce using rule 30 (id_list)


State 66

   32 id_pair: id_prefix . ASSIGN expression
   33        | id_prefix .

    ASSIGN  shift, and go to state 104

    $default  reduce using rule 33 (id_pair)


State 67

   36 expression: expression COMMA . assignment

    LP          shift, and go to state 11
    INC         shift, and go to state 12
    DEC         shift, and go to state 13
    NOT         shift, and go to state 14
    BREV        shift, and go to state 15
    ADD         shift, and go to state 16
    SUB         shift, and go to state 17
    SYMBOL      shift, and go to state 19
    IDENTIFIER  shift, and go to state 20

    assignment      go to state 105
    logical         go to state 36
    comparative     go to state 37
    additive        go to state 38
    multiplicative  go to state 39
    bitshift        go to state 40
    bitbinary       go to state 41
    postfix         go to state 42
    cast            go to state 43
    node            go to state 44


State 68

    6 statement: expression SEMICOLON .

    $default  reduce using rule 6 (statement)


State 69

   48 logical: logical LAND . comparative

    LP          shift, and go to state 11
    INC         shift, and go to state 12
    DEC         shift, and go to state 13
    NOT         shift, and go to state 14
    BREV        shift, and go to state 15
    ADD         shift, and go to state 16
    SUB         shift, and go to state 17
    SYMBOL      shift, and go to state 19
    IDENTIFIER  shift, and go to state 20

    comparative     go to state 106
    additive        go to state 38
    multiplicative  go to state 39
    bitshift        go to state 40
    bitbinary       go to state 41
    postfix         go to state 42
    cast            go to state 43
    node            go to state 52


State 70

   49 logical: logical LOR . comparative

    LP          shift, and go to state 11
    INC         shift, and go to state 12
    DEC         shift, and go to state 13
    NOT         shift, and go to state 14
    BREV        shift, and go to state 15
    ADD         shift, and go to state 16
    SUB         shift, and go to state 17
    SYMBOL      shift, and go to state 19
    IDENTIFIER  shift, and go to state 20

    comparative     go to state 107
    additive        go to state 38
    multiplicative  go to state 39
    bitshift        go to state 40
    bitbinary       go to state 41
    postfix         go to state 42
    cast            go to state 43
    node            go to state 52


State 71

   51 comparative: comparative LESS . additive

    LP          shift, and go to state 11
    INC         shift, and go to state 12
    DEC         shift, and go to state 13
    NOT         shift, and go to state 14
    BREV        shift, and go to state 15
    ADD         shift, and go to state 16
    SUB         shift, and go to state 17
    SYMBOL      shift, and go to state 19
    IDENTIFIER  shift, and go to state 20

    additive        go to state 108
    multiplicative  go to state 39
    bitshift        go to state 40
    bitbinary       go to state 41
    postfix         go to state 42
    cast            go to state 43
    node            go to state 52


State 72

   52 comparative: comparative LESSEQ . additive

    LP          shift, and go to state 11
    INC         shift, and go to state 12
    DEC         shift, and go to state 13
    NOT         shift, and go to state 14
    BREV        shift, and go to state 15
    ADD         shift, and go to state 16
    SUB         shift, and go to state 17
    SYMBOL      shift, and go to state 19
    IDENTIFIER  shift, and go to state 20

    additive        go to state 109
    multiplicative  go to state 39
    bitshift        go to state 40
    bitbinary       go to state 41
    postfix         go to state 42
    cast            go to state 43
    node            go to state 52


State 73

   53 comparative: comparative MORE . additive

    LP          shift, and go to state 11
    INC         shift, and go to state 12
    DEC         shift, and go to state 13
    NOT         shift, and go to state 14
    BREV        shift, and go to state 15
    ADD         shift, and go to state 16
    SUB         shift, and go to state 17
    SYMBOL      shift, and go to state 19
    IDENTIFIER  shift, and go to state 20

    additive        go to state 110
    multiplicative  go to state 39
    bitshift        go to state 40
    bitbinary       go to state 41
    postfix         go to state 42
    cast            go to state 43
    node            go to state 52


State 74

   54 comparative: comparative MOREEQ . additive

    LP          shift, and go to state 11
    INC         shift, and go to state 12
    DEC         shift, and go to state 13
    NOT         shift, and go to state 14
    BREV        shift, and go to state 15
    ADD         shift, and go to state 16
    SUB         shift, and go to state 17
    SYMBOL      shift, and go to state 19
    IDENTIFIER  shift, and go to state 20

    additive        go to state 111
    multiplicative  go to state 39
    bitshift        go to state 40
    bitbinary       go to state 41
    postfix         go to state 42
    cast            go to state 43
    node            go to state 52


State 75

   55 comparative: comparative EQ . additive

    LP          shift, and go to state 11
    INC         shift, and go to state 12
    DEC         shift, and go to state 13
    NOT         shift, and go to state 14
    BREV        shift, and go to state 15
    ADD         shift, and go to state 16
    SUB         shift, and go to state 17
    SYMBOL      shift, and go to state 19
    IDENTIFIER  shift, and go to state 20

    additive        go to state 112
    multiplicative  go to state 39
    bitshift        go to state 40
    bitbinary       go to state 41
    postfix         go to state 42
    cast            go to state 43
    node            go to state 52


State 76

   56 comparative: comparative NE . additive

    LP          shift, and go to state 11
    INC         shift, and go to state 12
    DEC         shift, and go to state 13
    NOT         shift, and go to state 14
    BREV        shift, and go to state 15
    ADD         shift, and go to state 16
    SUB         shift, and go to state 17
    SYMBOL      shift, and go to state 19
    IDENTIFIER  shift, and go to state 20

    additive        go to state 113
    multiplicative  go to state 39
    bitshift        go to state 40
    bitbinary       go to state 41
    postfix         go to state 42
    cast            go to state 43
    node            go to state 52


State 77

   58 additive: additive ADD . multiplicative

    LP          shift, and go to state 11
    INC         shift, and go to state 12
    DEC         shift, and go to state 13
    NOT         shift, and go to state 14
    BREV        shift, and go to state 15
    SYMBOL      shift, and go to state 19
    IDENTIFIER  shift, and go to state 20

    multiplicative  go to state 114
    bitshift        go to state 40
    bitbinary       go to state 41
    postfix         go to state 42
    cast            go to state 43
    node            go to state 52


State 78

   59 additive: additive SUB . multiplicative

    LP          shift, and go to state 11
    INC         shift, and go to state 12
    DEC         shift, and go to state 13
    NOT         shift, and go to state 14
    BREV        shift, and go to state 15
    SYMBOL      shift, and go to state 19
    IDENTIFIER  shift, and go to state 20

    multiplicative  go to state 115
    bitshift        go to state 40
    bitbinary       go to state 41
    postfix         go to state 42
    cast            go to state 43
    node            go to state 52


State 79

   60 additive: additive BAND . multiplicative

    LP          shift, and go to state 11
    INC         shift, and go to state 12
    DEC         shift, and go to state 13
    NOT         shift, and go to state 14
    BREV        shift, and go to state 15
    SYMBOL      shift, and go to state 19
    IDENTIFIER  shift, and go to state 20

    multiplicative  go to state 116
    bitshift        go to state 40
    bitbinary       go to state 41
    postfix         go to state 42
    cast            go to state 43
    node            go to state 52


State 80

   61 additive: additive BXOR . multiplicative

    LP          shift, and go to state 11
    INC         shift, and go to state 12
    DEC         shift, and go to state 13
    NOT         shift, and go to state 14
    BREV        shift, and go to state 15
    SYMBOL      shift, and go to state 19
    IDENTIFIER  shift, and go to state 20

    multiplicative  go to state 117
    bitshift        go to state 40
    bitbinary       go to state 41
    postfix         go to state 42
    cast            go to state 43
    node            go to state 52


State 81

   62 additive: additive BOR . multiplicative

    LP          shift, and go to state 11
    INC         shift, and go to state 12
    DEC         shift, and go to state 13
    NOT         shift, and go to state 14
    BREV        shift, and go to state 15
    SYMBOL      shift, and go to state 19
    IDENTIFIER  shift, and go to state 20

    multiplicative  go to state 118
    bitshift        go to state 40
    bitbinary       go to state 41
    postfix         go to state 42
    cast            go to state 43
    node            go to state 52


State 82

   66 multiplicative: multiplicative MUL . bitshift

    LP          shift, and go to state 11
    INC         shift, and go to state 12
    DEC         shift, and go to state 13
    NOT         shift, and go to state 14
    BREV        shift, and go to state 15
    SYMBOL      shift, and go to state 19
    IDENTIFIER  shift, and go to state 20

    bitshift   go to state 119
    bitbinary  go to state 41
    postfix    go to state 42
    cast       go to state 43
    node       go to state 52


State 83

   67 multiplicative: multiplicative DIV . bitshift

    LP          shift, and go to state 11
    INC         shift, and go to state 12
    DEC         shift, and go to state 13
    NOT         shift, and go to state 14
    BREV        shift, and go to state 15
    SYMBOL      shift, and go to state 19
    IDENTIFIER  shift, and go to state 20

    bitshift   go to state 120
    bitbinary  go to state 41
    postfix    go to state 42
    cast       go to state 43
    node       go to state 52


State 84

   68 multiplicative: multiplicative MOD . bitshift

    LP          shift, and go to state 11
    INC         shift, and go to state 12
    DEC         shift, and go to state 13
    NOT         shift, and go to state 14
    BREV        shift, and go to state 15
    SYMBOL      shift, and go to state 19
    IDENTIFIER  shift, and go to state 20

    bitshift   go to state 121
    bitbinary  go to state 41
    postfix    go to state 42
    cast       go to state 43
    node       go to state 52


State 85

   70 bitshift: bitshift LMOVE . bitbinary

    LP          shift, and go to state 11
    INC         shift, and go to state 12
    DEC         shift, and go to state 13
    NOT         shift, and go to state 14
    BREV        shift, and go to state 15
    SYMBOL      shift, and go to state 19
    IDENTIFIER  shift, and go to state 20

    bitbinary  go to state 122
    postfix    go to state 42
    cast       go to state 43
    node       go to state 52


State 86

   71 bitshift: bitshift RMOVE . bitbinary

    LP          shift, and go to state 11
    INC         shift, and go to state 12
    DEC         shift, and go to state 13
    NOT         shift, and go to state 14
    BREV        shift, and go to state 15
    SYMBOL      shift, and go to state 19
    IDENTIFIER  shift, and go to state 20

    bitbinary  go to state 123
    postfix    go to state 42
    cast       go to state 43
    node       go to state 52


State 87

   38 assignment: node MULAS . logical

    LP          shift, and go to state 11
    INC         shift, and go to state 12
    DEC         shift, and go to state 13
    NOT         shift, and go to state 14
    BREV        shift, and go to state 15
    ADD         shift, and go to state 16
    SUB         shift, and go to state 17
    SYMBOL      shift, and go to state 19
    IDENTIFIER  shift, and go to state 20

    logical         go to state 124
    comparative     go to state 37
    additive        go to state 38
    multiplicative  go to state 39
    bitshift        go to state 40
    bitbinary       go to state 41
    postfix         go to state 42
    cast            go to state 43
    node            go to state 52


State 88

   39 assignment: node DIVAS . logical

    LP          shift, and go to state 11
    INC         shift, and go to state 12
    DEC         shift, and go to state 13
    NOT         shift, and go to state 14
    BREV        shift, and go to state 15
    ADD         shift, and go to state 16
    SUB         shift, and go to state 17
    SYMBOL      shift, and go to state 19
    IDENTIFIER  shift, and go to state 20

    logical         go to state 125
    comparative     go to state 37
    additive        go to state 38
    multiplicative  go to state 39
    bitshift        go to state 40
    bitbinary       go to state 41
    postfix         go to state 42
    cast            go to state 43
    node            go to state 52


State 89

   40 assignment: node MODAS . logical

    LP          shift, and go to state 11
    INC         shift, and go to state 12
    DEC         shift, and go to state 13
    NOT         shift, and go to state 14
    BREV        shift, and go to state 15
    ADD         shift, and go to state 16
    SUB         shift, and go to state 17
    SYMBOL      shift, and go to state 19
    IDENTIFIER  shift, and go to state 20

    logical         go to state 126
    comparative     go to state 37
    additive        go to state 38
    multiplicative  go to state 39
    bitshift        go to state 40
    bitbinary       go to state 41
    postfix         go to state 42
    cast            go to state 43
    node            go to state 52


State 90

   41 assignment: node ADDAS . logical

    LP          shift, and go to state 11
    INC         shift, and go to state 12
    DEC         shift, and go to state 13
    NOT         shift, and go to state 14
    BREV        shift, and go to state 15
    ADD         shift, and go to state 16
    SUB         shift, and go to state 17
    SYMBOL      shift, and go to state 19
    IDENTIFIER  shift, and go to state 20

    logical         go to state 127
    comparative     go to state 37
    additive        go to state 38
    multiplicative  go to state 39
    bitshift        go to state 40
    bitbinary       go to state 41
    postfix         go to state 42
    cast            go to state 43
    node            go to state 52


State 91

   42 assignment: node SUBAS . logical

    LP          shift, and go to state 11
    INC         shift, and go to state 12
    DEC         shift, and go to state 13
    NOT         shift, and go to state 14
    BREV        shift, and go to state 15
    ADD         shift, and go to state 16
    SUB         shift, and go to state 17
    SYMBOL      shift, and go to state 19
    IDENTIFIER  shift, and go to state 20

    logical         go to state 128
    comparative     go to state 37
    additive        go to state 38
    multiplicative  go to state 39
    bitshift        go to state 40
    bitbinary       go to state 41
    postfix         go to state 42
    cast            go to state 43
    node            go to state 52


State 92

   43 assignment: node BANDAS . logical

    LP          shift, and go to state 11
    INC         shift, and go to state 12
    DEC         shift, and go to state 13
    NOT         shift, and go to state 14
    BREV        shift, and go to state 15
    ADD         shift, and go to state 16
    SUB         shift, and go to state 17
    SYMBOL      shift, and go to state 19
    IDENTIFIER  shift, and go to state 20

    logical         go to state 129
    comparative     go to state 37
    additive        go to state 38
    multiplicative  go to state 39
    bitshift        go to state 40
    bitbinary       go to state 41
    postfix         go to state 42
    cast            go to state 43
    node            go to state 52


State 93

   44 assignment: node BXORAS . logical

    LP          shift, and go to state 11
    INC         shift, and go to state 12
    DEC         shift, and go to state 13
    NOT         shift, and go to state 14
    BREV        shift, and go to state 15
    ADD         shift, and go to state 16
    SUB         shift, and go to state 17
    SYMBOL      shift, and go to state 19
    IDENTIFIER  shift, and go to state 20

    logical         go to state 130
    comparative     go to state 37
    additive        go to state 38
    multiplicative  go to state 39
    bitshift        go to state 40
    bitbinary       go to state 41
    postfix         go to state 42
    cast            go to state 43
    node            go to state 52


State 94

   45 assignment: node BORAS . logical

    LP          shift, and go to state 11
    INC         shift, and go to state 12
    DEC         shift, and go to state 13
    NOT         shift, and go to state 14
    BREV        shift, and go to state 15
    ADD         shift, and go to state 16
    SUB         shift, and go to state 17
    SYMBOL      shift, and go to state 19
    IDENTIFIER  shift, and go to state 20

    logical         go to state 131
    comparative     go to state 37
    additive        go to state 38
    multiplicative  go to state 39
    bitshift        go to state 40
    bitbinary       go to state 41
    postfix         go to state 42
    cast            go to state 43
    node            go to state 52


State 95

   46 assignment: node ASSIGN . logical

    LP          shift, and go to state 11
    INC         shift, and go to state 12
    DEC         shift, and go to state 13
    NOT         shift, and go to state 14
    BREV        shift, and go to state 15
    ADD         shift, and go to state 16
    SUB         shift, and go to state 17
    SYMBOL      shift, and go to state 19
    IDENTIFIER  shift, and go to state 20

    logical         go to state 132
    comparative     go to state 37
    additive        go to state 38
    multiplicative  go to state 39
    bitshift        go to state 40
    bitbinary       go to state 41
    postfix         go to state 42
    cast            go to state 43
    node            go to state 52


State 96

   22 do_while_statement: K_DO lb_scope statement . RB K_WHILE LP expression RP SEMICOLON

    RB  shift, and go to state 133


State 97

   20 for_statement: K_FOR LP expression . SEMICOLON expression SEMICOLON expression RP statement
   36 expression: expression . COMMA assignment

    COMMA      shift, and go to state 67
    SEMICOLON  shift, and go to state 134


State 98

   18 if_condition: K_IF LP expression . RP statement
   19 if_else_condition: K_IF LP expression . RP statement K_ELSE statement
   36 expression: expression . COMMA assignment

    RP     shift, and go to state 135
    COMMA  shift, and go to state 67


State 99

   21 while_statement: K_WHILE LP expression . RP statement
   36 expression: expression . COMMA assignment

    RP     shift, and go to state 136
    COMMA  shift, and go to state 67


State 100

   78 cast: LP expression RP .

    $default  reduce using rule 78 (cast)


State 101

    9 statement: lb_scope program RB .

    $default  reduce using rule 9 (statement)


State 102

   16 function_declaration_statement: type IDENTIFIER LP . RP LB program RB
   17                               | type IDENTIFIER LP . RP LB RB

    RP  shift, and go to state 137


State 103

   31 id_list: id_list COMMA . id_pair

    IDENTIFIER  shift, and go to state 138

    id_pair    go to state 139
    id_prefix  go to state 66


State 104

   32 id_pair: id_prefix ASSIGN . expression

    LP          shift, and go to state 11
    INC         shift, and go to state 12
    DEC         shift, and go to state 13
    NOT         shift, and go to state 14
    BREV        shift, and go to state 15
    ADD         shift, and go to state 16
    SUB         shift, and go to state 17
    SYMBOL      shift, and go to state 19
    IDENTIFIER  shift, and go to state 20

    expression      go to state 140
    assignment      go to state 35
    logical         go to state 36
    comparative     go to state 37
    additive        go to state 38
    multiplicative  go to state 39
    bitshift        go to state 40
    bitbinary       go to state 41
    postfix         go to state 42
    cast            go to state 43
    node            go to state 44


State 105

   36 expression: expression COMMA assignment .

    $default  reduce using rule 36 (expression)


State 106

   48 logical: logical LAND comparative .
   51 comparative: comparative . LESS additive
   52            | comparative . LESSEQ additive
   53            | comparative . MORE additive
   54            | comparative . MOREEQ additive
   55            | comparative . EQ additive
   56            | comparative . NE additive

    LESS    shift, and go to state 71
    LESSEQ  shift, and go to state 72
    MORE    shift, and go to state 73
    MOREEQ  shift, and go to state 74
    EQ      shift, and go to state 75
    NE      shift, and go to state 76

    $default  reduce using rule 48 (logical)


State 107

   49 logical: logical LOR comparative .
   51 comparative: comparative . LESS additive
   52            | comparative . LESSEQ additive
   53            | comparative . MORE additive
   54            | comparative . MOREEQ additive
   55            | comparative . EQ additive
   56            | comparative . NE additive

    LESS    shift, and go to state 71
    LESSEQ  shift, and go to state 72
    MORE    shift, and go to state 73
    MOREEQ  shift, and go to state 74
    EQ      shift, and go to state 75
    NE      shift, and go to state 76

    $default  reduce using rule 49 (logical)


State 108

   51 comparative: comparative LESS additive .
   58 additive: additive . ADD multiplicative
   59         | additive . SUB multiplicative
   60         | additive . BAND multiplicative
   61         | additive . BXOR multiplicative
   62         | additive . BOR multiplicative

    ADD   shift, and go to state 77
    SUB   shift, and go to state 78
    BAND  shift, and go to state 79
    BXOR  shift, and go to state 80
    BOR   shift, and go to state 81

    $default  reduce using rule 51 (comparative)


State 109

   52 comparative: comparative LESSEQ additive .
   58 additive: additive . ADD multiplicative
   59         | additive . SUB multiplicative
   60         | additive . BAND multiplicative
   61         | additive . BXOR multiplicative
   62         | additive . BOR multiplicative

    ADD   shift, and go to state 77
    SUB   shift, and go to state 78
    BAND  shift, and go to state 79
    BXOR  shift, and go to state 80
    BOR   shift, and go to state 81

    $default  reduce using rule 52 (comparative)


State 110

   53 comparative: comparative MORE additive .
   58 additive: additive . ADD multiplicative
   59         | additive . SUB multiplicative
   60         | additive . BAND multiplicative
   61         | additive . BXOR multiplicative
   62         | additive . BOR multiplicative

    ADD   shift, and go to state 77
    SUB   shift, and go to state 78
    BAND  shift, and go to state 79
    BXOR  shift, and go to state 80
    BOR   shift, and go to state 81

    $default  reduce using rule 53 (comparative)


State 111

   54 comparative: comparative MOREEQ additive .
   58 additive: additive . ADD multiplicative
   59         | additive . SUB multiplicative
   60         | additive . BAND multiplicative
   61         | additive . BXOR multiplicative
   62         | additive . BOR multiplicative

    ADD   shift, and go to state 77
    SUB   shift, and go to state 78
    BAND  shift, and go to state 79
    BXOR  shift, and go to state 80
    BOR   shift, and go to state 81

    $default  reduce using rule 54 (comparative)


State 112

   55 comparative: comparative EQ additive .
   58 additive: additive . ADD multiplicative
   59         | additive . SUB multiplicative
   60         | additive . BAND multiplicative
   61         | additive . BXOR multiplicative
   62         | additive . BOR multiplicative

    ADD   shift, and go to state 77
    SUB   shift, and go to state 78
    BAND  shift, and go to state 79
    BXOR  shift, and go to state 80
    BOR   shift, and go to state 81

    $default  reduce using rule 55 (comparative)


State 113

   56 comparative: comparative NE additive .
   58 additive: additive . ADD multiplicative
   59         | additive . SUB multiplicative
   60         | additive . BAND multiplicative
   61         | additive . BXOR multiplicative
   62         | additive . BOR multiplicative

    ADD   shift, and go to state 77
    SUB   shift, and go to state 78
    BAND  shift, and go to state 79
    BXOR  shift, and go to state 80
    BOR   shift, and go to state 81

    $default  reduce using rule 56 (comparative)


State 114

   58 additive: additive ADD multiplicative .
   66 multiplicative: multiplicative . MUL bitshift
   67               | multiplicative . DIV bitshift
   68               | multiplicative . MOD bitshift

    MUL  shift, and go to state 82
    DIV  shift, and go to state 83
    MOD  shift, and go to state 84

    $default  reduce using rule 58 (additive)


State 115

   59 additive: additive SUB multiplicative .
   66 multiplicative: multiplicative . MUL bitshift
   67               | multiplicative . DIV bitshift
   68               | multiplicative . MOD bitshift

    MUL  shift, and go to state 82
    DIV  shift, and go to state 83
    MOD  shift, and go to state 84

    $default  reduce using rule 59 (additive)


State 116

   60 additive: additive BAND multiplicative .
   66 multiplicative: multiplicative . MUL bitshift
   67               | multiplicative . DIV bitshift
   68               | multiplicative . MOD bitshift

    MUL  shift, and go to state 82
    DIV  shift, and go to state 83
    MOD  shift, and go to state 84

    $default  reduce using rule 60 (additive)


State 117

   61 additive: additive BXOR multiplicative .
   66 multiplicative: multiplicative . MUL bitshift
   67               | multiplicative . DIV bitshift
   68               | multiplicative . MOD bitshift

    MUL  shift, and go to state 82
    DIV  shift, and go to state 83
    MOD  shift, and go to state 84

    $default  reduce using rule 61 (additive)


State 118

   62 additive: additive BOR multiplicative .
   66 multiplicative: multiplicative . MUL bitshift
   67               | multiplicative . DIV bitshift
   68               | multiplicative . MOD bitshift

    MUL  shift, and go to state 82
    DIV  shift, and go to state 83
    MOD  shift, and go to state 84

    $default  reduce using rule 62 (additive)


State 119

   66 multiplicative: multiplicative MUL bitshift .
   70 bitshift: bitshift . LMOVE bitbinary
   71         | bitshift . RMOVE bitbinary

    LMOVE  shift, and go to state 85
    RMOVE  shift, and go to state 86

    $default  reduce using rule 66 (multiplicative)


State 120

   67 multiplicative: multiplicative DIV bitshift .
   70 bitshift: bitshift . LMOVE bitbinary
   71         | bitshift . RMOVE bitbinary

    LMOVE  shift, and go to state 85
    RMOVE  shift, and go to state 86

    $default  reduce using rule 67 (multiplicative)


State 121

   68 multiplicative: multiplicative MOD bitshift .
   70 bitshift: bitshift . LMOVE bitbinary
   71         | bitshift . RMOVE bitbinary

    LMOVE  shift, and go to state 85
    RMOVE  shift, and go to state 86

    $default  reduce using rule 68 (multiplicative)


State 122

   70 bitshift: bitshift LMOVE bitbinary .

    $default  reduce using rule 70 (bitshift)


State 123

   71 bitshift: bitshift RMOVE bitbinary .

    $default  reduce using rule 71 (bitshift)


State 124

   38 assignment: node MULAS logical .
   48 logical: logical . LAND comparative
   49        | logical . LOR comparative

    LAND  shift, and go to state 69
    LOR   shift, and go to state 70

    $default  reduce using rule 38 (assignment)


State 125

   39 assignment: node DIVAS logical .
   48 logical: logical . LAND comparative
   49        | logical . LOR comparative

    LAND  shift, and go to state 69
    LOR   shift, and go to state 70

    $default  reduce using rule 39 (assignment)


State 126

   40 assignment: node MODAS logical .
   48 logical: logical . LAND comparative
   49        | logical . LOR comparative

    LAND  shift, and go to state 69
    LOR   shift, and go to state 70

    $default  reduce using rule 40 (assignment)


State 127

   41 assignment: node ADDAS logical .
   48 logical: logical . LAND comparative
   49        | logical . LOR comparative

    LAND  shift, and go to state 69
    LOR   shift, and go to state 70

    $default  reduce using rule 41 (assignment)


State 128

   42 assignment: node SUBAS logical .
   48 logical: logical . LAND comparative
   49        | logical . LOR comparative

    LAND  shift, and go to state 69
    LOR   shift, and go to state 70

    $default  reduce using rule 42 (assignment)


State 129

   43 assignment: node BANDAS logical .
   48 logical: logical . LAND comparative
   49        | logical . LOR comparative

    LAND  shift, and go to state 69
    LOR   shift, and go to state 70

    $default  reduce using rule 43 (assignment)


State 130

   44 assignment: node BXORAS logical .
   48 logical: logical . LAND comparative
   49        | logical . LOR comparative

    LAND  shift, and go to state 69
    LOR   shift, and go to state 70

    $default  reduce using rule 44 (assignment)


State 131

   45 assignment: node BORAS logical .
   48 logical: logical . LAND comparative
   49        | logical . LOR comparative

    LAND  shift, and go to state 69
    LOR   shift, and go to state 70

    $default  reduce using rule 45 (assignment)


State 132

   46 assignment: node ASSIGN logical .
   48 logical: logical . LAND comparative
   49        | logical . LOR comparative

    LAND  shift, and go to state 69
    LOR   shift, and go to state 70

    $default  reduce using rule 46 (assignment)


State 133

   22 do_while_statement: K_DO lb_scope statement RB . K_WHILE LP expression RP SEMICOLON

    K_WHILE  shift, and go to state 141


State 134

   20 for_statement: K_FOR LP expression SEMICOLON . expression SEMICOLON expression RP statement

    LP          shift, and go to state 11
    INC         shift, and go to state 12
    DEC         shift, and go to state 13
    NOT         shift, and go to state 14
    BREV        shift, and go to state 15
    ADD         shift, and go to state 16
    SUB         shift, and go to state 17
    SYMBOL      shift, and go to state 19
    IDENTIFIER  shift, and go to state 20

    expression      go to state 142
    assignment      go to state 35
    logical         go to state 36
    comparative     go to state 37
    additive        go to state 38
    multiplicative  go to state 39
    bitshift        go to state 40
    bitbinary       go to state 41
    postfix         go to state 42
    cast            go to state 43
    node            go to state 44


State 135

   18 if_condition: K_IF LP expression RP . statement
   19 if_else_condition: K_IF LP expression RP . statement K_ELSE statement

    T_AUTO      shift, and go to state 1
    T_CHAR      shift, and go to state 2
    T_INT       shift, and go to state 3
    T_DOUBLE    shift, and go to state 4
    T_VOID      shift, and go to state 5
    T_STRING    shift, and go to state 6
    K_DO        shift, and go to state 7
    K_FOR       shift, and go to state 8
    K_IF        shift, and go to state 9
    K_WHILE     shift, and go to state 10
    LP          shift, and go to state 11
    INC         shift, and go to state 12
    DEC         shift, and go to state 13
    NOT         shift, and go to state 14
    BREV        shift, and go to state 15
    ADD         shift, and go to state 16
    SUB         shift, and go to state 17
    SEMICOLON   shift, and go to state 18
    SYMBOL      shift, and go to state 19
    IDENTIFIER  shift, and go to state 20
    LB          shift, and go to state 45

    lb_scope                        go to state 24
    statement                       go to state 143
    function_declaration_statement  go to state 26
    if_condition                    go to state 27
    if_else_condition               go to state 28
    for_statement                   go to state 29
    while_statement                 go to state 30
    do_while_statement              go to state 31
    declaration                     go to state 32
    type                            go to state 33
    expression                      go to state 34
    assignment                      go to state 35
    logical                         go to state 36
    comparative                     go to state 37
    additive                        go to state 38
    multiplicative                  go to state 39
    bitshift                        go to state 40
    bitbinary                       go to state 41
    postfix                         go to state 42
    cast                            go to state 43
    node                            go to state 44


State 136

   21 while_statement: K_WHILE LP expression RP . statement

    T_AUTO      shift, and go to state 1
    T_CHAR      shift, and go to state 2
    T_INT       shift, and go to state 3
    T_DOUBLE    shift, and go to state 4
    T_VOID      shift, and go to state 5
    T_STRING    shift, and go to state 6
    K_DO        shift, and go to state 7
    K_FOR       shift, and go to state 8
    K_IF        shift, and go to state 9
    K_WHILE     shift, and go to state 10
    LP          shift, and go to state 11
    INC         shift, and go to state 12
    DEC         shift, and go to state 13
    NOT         shift, and go to state 14
    BREV        shift, and go to state 15
    ADD         shift, and go to state 16
    SUB         shift, and go to state 17
    SEMICOLON   shift, and go to state 18
    SYMBOL      shift, and go to state 19
    IDENTIFIER  shift, and go to state 20
    LB          shift, and go to state 45

    lb_scope                        go to state 24
    statement                       go to state 144
    function_declaration_statement  go to state 26
    if_condition                    go to state 27
    if_else_condition               go to state 28
    for_statement                   go to state 29
    while_statement                 go to state 30
    do_while_statement              go to state 31
    declaration                     go to state 32
    type                            go to state 33
    expression                      go to state 34
    assignment                      go to state 35
    logical                         go to state 36
    comparative                     go to state 37
    additive                        go to state 38
    multiplicative                  go to state 39
    bitshift                        go to state 40
    bitbinary                       go to state 41
    postfix                         go to state 42
    cast                            go to state 43
    node                            go to state 44


State 137

   16 function_declaration_statement: type IDENTIFIER LP RP . LB program RB
   17                               | type IDENTIFIER LP RP . LB RB

    LB  shift, and go to state 145


State 138

   34 id_prefix: IDENTIFIER .

    $default  reduce using rule 34 (id_prefix)


State 139

   31 id_list: id_list COMMA id_pair .

    $default  reduce using rule 31 (id_list)


State 140

   32 id_pair: id_prefix ASSIGN expression .
   36 expression: expression . COMMA assignment

    $default  reduce using rule 32 (id_pair)


State 141

   22 do_while_statement: K_DO lb_scope statement RB K_WHILE . LP expression RP SEMICOLON

    LP  shift, and go to state 146


State 142

   20 for_statement: K_FOR LP expression SEMICOLON expression . SEMICOLON expression RP statement
   36 expression: expression . COMMA assignment

    COMMA      shift, and go to state 67
    SEMICOLON  shift, and go to state 147


State 143

   18 if_condition: K_IF LP expression RP statement .
   19 if_else_condition: K_IF LP expression RP statement . K_ELSE statement

    K_ELSE  shift, and go to state 148

    $default  reduce using rule 18 (if_condition)


State 144

   21 while_statement: K_WHILE LP expression RP statement .

    $default  reduce using rule 21 (while_statement)


State 145

   16 function_declaration_statement: type IDENTIFIER LP RP LB . program RB
   17                               | type IDENTIFIER LP RP LB . RB

    T_AUTO      shift, and go to state 1
    T_CHAR      shift, and go to state 2
    T_INT       shift, and go to state 3
    T_DOUBLE    shift, and go to state 4
    T_VOID      shift, and go to state 5
    T_STRING    shift, and go to state 6
    K_DO        shift, and go to state 7
    K_FOR       shift, and go to state 8
    K_IF        shift, and go to state 9
    K_WHILE     shift, and go to state 10
    LP          shift, and go to state 11
    INC         shift, and go to state 12
    DEC         shift, and go to state 13
    NOT         shift, and go to state 14
    BREV        shift, and go to state 15
    ADD         shift, and go to state 16
    SUB         shift, and go to state 17
    SEMICOLON   shift, and go to state 18
    SYMBOL      shift, and go to state 19
    IDENTIFIER  shift, and go to state 20
    LB          shift, and go to state 21
    RB          shift, and go to state 149

    program                         go to state 150
    lb_scope                        go to state 24
    statement                       go to state 25
    function_declaration_statement  go to state 26
    if_condition                    go to state 27
    if_else_condition               go to state 28
    for_statement                   go to state 29
    while_statement                 go to state 30
    do_while_statement              go to state 31
    declaration                     go to state 32
    type                            go to state 33
    expression                      go to state 34
    assignment                      go to state 35
    logical                         go to state 36
    comparative                     go to state 37
    additive                        go to state 38
    multiplicative                  go to state 39
    bitshift                        go to state 40
    bitbinary                       go to state 41
    postfix                         go to state 42
    cast                            go to state 43
    node                            go to state 44


State 146

   22 do_while_statement: K_DO lb_scope statement RB K_WHILE LP . expression RP SEMICOLON

    LP          shift, and go to state 11
    INC         shift, and go to state 12
    DEC         shift, and go to state 13
    NOT         shift, and go to state 14
    BREV        shift, and go to state 15
    ADD         shift, and go to state 16
    SUB         shift, and go to state 17
    SYMBOL      shift, and go to state 19
    IDENTIFIER  shift, and go to state 20

    expression      go to state 151
    assignment      go to state 35
    logical         go to state 36
    comparative     go to state 37
    additive        go to state 38
    multiplicative  go to state 39
    bitshift        go to state 40
    bitbinary       go to state 41
    postfix         go to state 42
    cast            go to state 43
    node            go to state 44


State 147

   20 for_statement: K_FOR LP expression SEMICOLON expression SEMICOLON . expression RP statement

    LP          shift, and go to state 11
    INC         shift, and go to state 12
    DEC         shift, and go to state 13
    NOT         shift, and go to state 14
    BREV        shift, and go to state 15
    ADD         shift, and go to state 16
    SUB         shift, and go to state 17
    SYMBOL      shift, and go to state 19
    IDENTIFIER  shift, and go to state 20

    expression      go to state 152
    assignment      go to state 35
    logical         go to state 36
    comparative     go to state 37
    additive        go to state 38
    multiplicative  go to state 39
    bitshift        go to state 40
    bitbinary       go to state 41
    postfix         go to state 42
    cast            go to state 43
    node            go to state 44


State 148

   19 if_else_condition: K_IF LP expression RP statement K_ELSE . statement

    T_AUTO      shift, and go to state 1
    T_CHAR      shift, and go to state 2
    T_INT       shift, and go to state 3
    T_DOUBLE    shift, and go to state 4
    T_VOID      shift, and go to state 5
    T_STRING    shift, and go to state 6
    K_DO        shift, and go to state 7
    K_FOR       shift, and go to state 8
    K_IF        shift, and go to state 9
    K_WHILE     shift, and go to state 10
    LP          shift, and go to state 11
    INC         shift, and go to state 12
    DEC         shift, and go to state 13
    NOT         shift, and go to state 14
    BREV        shift, and go to state 15
    ADD         shift, and go to state 16
    SUB         shift, and go to state 17
    SEMICOLON   shift, and go to state 18
    SYMBOL      shift, and go to state 19
    IDENTIFIER  shift, and go to state 20
    LB          shift, and go to state 45

    lb_scope                        go to state 24
    statement                       go to state 153
    function_declaration_statement  go to state 26
    if_condition                    go to state 27
    if_else_condition               go to state 28
    for_statement                   go to state 29
    while_statement                 go to state 30
    do_while_statement              go to state 31
    declaration                     go to state 32
    type                            go to state 33
    expression                      go to state 34
    assignment                      go to state 35
    logical                         go to state 36
    comparative                     go to state 37
    additive                        go to state 38
    multiplicative                  go to state 39
    bitshift                        go to state 40
    bitbinary                       go to state 41
    postfix                         go to state 42
    cast                            go to state 43
    node                            go to state 44


State 149

   17 function_declaration_statement: type IDENTIFIER LP RP LB RB .

    $default  reduce using rule 17 (function_declaration_statement)


State 150

    2 program: program . statement
   16 function_declaration_statement: type IDENTIFIER LP RP LB program . RB

    T_AUTO      shift, and go to state 1
    T_CHAR      shift, and go to state 2
    T_INT       shift, and go to state 3
    T_DOUBLE    shift, and go to state 4
    T_VOID      shift, and go to state 5
    T_STRING    shift, and go to state 6
    K_DO        shift, and go to state 7
    K_FOR       shift, and go to state 8
    K_IF        shift, and go to state 9
    K_WHILE     shift, and go to state 10
    LP          shift, and go to state 11
    INC         shift, and go to state 12
    DEC         shift, and go to state 13
    NOT         shift, and go to state 14
    BREV        shift, and go to state 15
    ADD         shift, and go to state 16
    SUB         shift, and go to state 17
    SEMICOLON   shift, and go to state 18
    SYMBOL      shift, and go to state 19
    IDENTIFIER  shift, and go to state 20
    LB          shift, and go to state 45
    RB          shift, and go to state 154

    lb_scope                        go to state 24
    statement                       go to state 60
    function_declaration_statement  go to state 26
    if_condition                    go to state 27
    if_else_condition               go to state 28
    for_statement                   go to state 29
    while_statement                 go to state 30
    do_while_statement              go to state 31
    declaration                     go to state 32
    type                            go to state 33
    expression                      go to state 34
    assignment                      go to state 35
    logical                         go to state 36
    comparative                     go to state 37
    additive                        go to state 38
    multiplicative                  go to state 39
    bitshift                        go to state 40
    bitbinary                       go to state 41
    postfix                         go to state 42
    cast                            go to state 43
    node                            go to state 44


State 151

   22 do_while_statement: K_DO lb_scope statement RB K_WHILE LP expression . RP SEMICOLON
   36 expression: expression . COMMA assignment

    RP     shift, and go to state 155
    COMMA  shift, and go to state 67


State 152

   20 for_statement: K_FOR LP expression SEMICOLON expression SEMICOLON expression . RP statement
   36 expression: expression . COMMA assignment

    RP     shift, and go to state 156
    COMMA  shift, and go to state 67


State 153

   19 if_else_condition: K_IF LP expression RP statement K_ELSE statement .

    $default  reduce using rule 19 (if_else_condition)


State 154

   16 function_declaration_statement: type IDENTIFIER LP RP LB program RB .

    $default  reduce using rule 16 (function_declaration_statement)


State 155

   22 do_while_statement: K_DO lb_scope statement RB K_WHILE LP expression RP . SEMICOLON

    SEMICOLON  shift, and go to state 157


State 156

   20 for_statement: K_FOR LP expression SEMICOLON expression SEMICOLON expression RP . statement

    T_AUTO      shift, and go to state 1
    T_CHAR      shift, and go to state 2
    T_INT       shift, and go to state 3
    T_DOUBLE    shift, and go to state 4
    T_VOID      shift, and go to state 5
    T_STRING    shift, and go to state 6
    K_DO        shift, and go to state 7
    K_FOR       shift, and go to state 8
    K_IF        shift, and go to state 9
    K_WHILE     shift, and go to state 10
    LP          shift, and go to state 11
    INC         shift, and go to state 12
    DEC         shift, and go to state 13
    NOT         shift, and go to state 14
    BREV        shift, and go to state 15
    ADD         shift, and go to state 16
    SUB         shift, and go to state 17
    SEMICOLON   shift, and go to state 18
    SYMBOL      shift, and go to state 19
    IDENTIFIER  shift, and go to state 20
    LB          shift, and go to state 45

    lb_scope                        go to state 24
    statement                       go to state 158
    function_declaration_statement  go to state 26
    if_condition                    go to state 27
    if_else_condition               go to state 28
    for_statement                   go to state 29
    while_statement                 go to state 30
    do_while_statement              go to state 31
    declaration                     go to state 32
    type                            go to state 33
    expression                      go to state 34
    assignment                      go to state 35
    logical                         go to state 36
    comparative                     go to state 37
    additive                        go to state 38
    multiplicative                  go to state 39
    bitshift                        go to state 40
    bitbinary                       go to state 41
    postfix                         go to state 42
    cast                            go to state 43
    node                            go to state 44


State 157

   22 do_while_statement: K_DO lb_scope statement RB K_WHILE LP expression RP SEMICOLON .

    $default  reduce using rule 22 (do_while_statement)


State 158

   20 for_statement: K_FOR LP expression SEMICOLON expression SEMICOLON expression RP statement .

    $default  reduce using rule 20 (for_statement)
